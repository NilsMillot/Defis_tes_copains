knpu_oauth2_client:
    clients:
        # github_main:
        #     type: github
        #     client_id: '%env(GITHUB_CLIENT_ID)%'
        #     client_secret: '%env(GITHUB_CLIENT_SECRET)%'
        #     redirect_route: connect_github_check
        #     redirect_params: {}
        #     # redirect_params:
        #     #     service: github
        # configure your clients as described here: https://github.com/knpuniversity/oauth2-client-bundle#configuration
        facebook:
            # this will be one of the supported types
            type: facebook
            client_id: '%env(FACEBOOK_CLIENT_ID)%'
            client_secret: '%env(FACEBOOK_CLIENT_SECRET)%'
            # the route that you're redirected to after
            # see the controller example below
            redirect_route: connect_facebook_check
            redirect_params: {}
            graph_api_version: v2.12

        # will create service: "knpu.oauth2.client.google"
        # an instance of: KnpU\OAuth2ClientBundle\Client\Provider\GoogleClient
        # composer require league/oauth2-google
        google:
            type: google
            client_id: '%env(GOOGLE_CLIENT_ID)%'
            client_secret: '%env(GOOGLE_CLIENT_SECRET)%'
            # a route name you'll create
            redirect_route: connect_google_check
            redirect_params: {}
            # Optional value for sending access_type parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters
            # access_type: null
            # Optional value for sending hd parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#hd-param
            # hosted_domain: null
            # Optional value for additional fields to be requested from the user profile. If set, these values will be included with the defaults. More details: https://developers.google.com/+/web/api/rest/latest/people
            # user_fields: {}
            # Optional value if you don't want or need to enable Google+ API access.
            # use_oidc_mode: false
            # whether to check OAuth2 "state": defaults to true
            # use_state: true